{
	"info": {
		"_postman_id": "cab2babf-9439-4003-829b-2cb30002983c",
		"name": "Drips",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24855208"
	},
	"item": [
		{
			"name": "List Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"//response body\r",
							"pm.test(\"Page value is 2\", ()=> {\r",
							"    pm.expect(pm.response.json().page).to.eql(2);\r",
							"});\r",
							"\r",
							"//response body\r",
							"pm.test(\"per_Page value is 6\", ()=> {\r",
							"    pm.expect(pm.response.json().per_page).to.eql(6);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/user?page=2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"user"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"//response body\r",
							"pm.test(\"id value is 2\", ()=> {\r",
							"    pm.expect(pm.response.json().data.id).to.eql(2);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single User Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404, User not found\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//no response body to test"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users/23",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"//response body\r",
							"pm.test(\"name value is bill\", ()=> {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"bill\");\r",
							"});\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"bill\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Put",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"//response body\r",
							"pm.test(\"name value is morpheus\", ()=> {\r",
							"    pm.expect(pm.response.json().name).to.eql(\"morpheus\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update_Patch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Type header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							"//response body\r",
							"pm.test(\"job value is zion resident\", ()=> {\r",
							"    pm.expect(pm.response.json().job).to.eql(\"zion resident\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 204, no content\", () => {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"//header\r",
							"pm.test(\"Content-Length header is present\", ()=> {\r",
							"    pm.response.to.have.header(\"Content-Length\");\r",
							"})\r",
							"\r",
							"//response time\r",
							"pm.test(\"Response time is less than 200ms\", ()=>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"})\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}api/users/2",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://reqres.in/",
			"type": "string"
		}
	]
}